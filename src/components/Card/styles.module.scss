@import '@/styles/colors.scss';

// Generate different colors for slides
@mixin color_render($DC1, $DC2, $LC) {
  background-image: linear-gradient(90deg, $DC1, $DC2);
  .illustration .inner {
    background-color: rgba($LC, 0.4);
    &::after,
    &::before {
      background-color: rgba($LC, 0.4);
    }
  }
  button {
    background-color: $LC;
  }
}

.box {
  height: 100%;
  width: 100%;
  display: grid;
  padding: 90px;
  grid-template-columns: repeat(2, 1fr);
  gap: 40px;
  align-items: center;
  overflow: hidden;
  position: relative;
  box-sizing: border-box;

  .bg {
    background-image: linear-gradient(90deg,rgba(0, 0, 0, 0),rgba(0, 0, 0, 0.02));
    position: absolute;
    height: 100%;
    transition: all 1s ease;

    &#active {
      transform: skewX(7deg);
      width: 50%;
    }

    &#inactive {
      transform: skewX(0deg);
      width: 0%;
    }

    &::before {
      content: "";
      width: 100%;
      height: 100%;
      position: absolute;
      left: 0;
      top: 0;
      background-image: linear-gradient(90deg,rgba(0, 0, 0, 0),rgba(0, 0, 0, 0.02));
      pointer-events: none;
      transform: skewX(5deg);

    }
  }

  .details {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: center;
    gap: 1rem;
    height: 100%;
    z-index: 100;
    box-sizing: border-box;

    .titles {
      display: flex;
      flex-direction: column;

      &#light span {
        color: $principalLightColor;
      }

      span {
        color: $principalDarkColor;
        font-size: 32px;
        min-height: 40px;
      }
    }

    .descriptions {
      display: flex;
      flex-wrap: wrap;
      justify-content: space-between;
      gap: 1rem;

      &#light .description {
        svg {
          fill: $principalLightColor;
        }

        p {
          color: $principalLightColor;
        }
      }

      .description {
        display: flex;
        align-items: center;
        gap: 10px;

        &#pointer {
          cursor: pointer;
        }

        svg {
          width: 40px;
          height: 40px;
          fill: $principalDarkColor;
        }

        p {
          font-size: 14px;
          color: $principalDarkColor;
          text-align: justify;
          margin: 0;
        }
      }
    }

    .buttons {
      display: flex;

      button {
        padding: 10px 20px;
        color: rgb(0, 0, 0);
        border-radius: 2rem;
        outline: none;
        border: none;
        cursor: pointer;
        transition: all 0.3s ease;

        &.none {
          display: none;
        }

        &:hover {
          opacity: 0.8;
        }

        &:focus {
          outline: none;
          border: none;
        }
      }
    }

    a {
      color: black;
      text-decoration: none;
    }
  }

  .illustration {
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;

    .inner {
      display: flex;
      justify-content: center;
      align-items: center;
      width: 100%;
      max-width: 300px;
      aspect-ratio: 1/1;
      border-radius: 3rem;
      //background-color: #FF0077;
      position: relative;
      transform: skewX(-10deg);

      &::after,
      &::before {
        content: "";
        position: absolute;
        height: 100%;
        width: 100%;
        border-radius: 3rem;
        top: 0;
        left: 0;
        z-index: -1;
      }

      &::after {
        transform: translate(1rem, -1rem);
      }
      &::before {
        transform: translate(2rem, -2rem);
      }

      img {
        width: 80%;
        height: auto;
        transform: skewX(10deg);
      }
    }
  }

  @media only screen and (max-width: 1024px) {
    grid-template-columns: 2fr 1fr;
  }

  @media only screen and (max-width: 768px) {
    grid-template-columns: 1fr;

    .illustration {
      display: none;
    }
  }

  @media only screen and (max-width: 425px) {
    padding: 40px;
  }
}


.box0 {
  @include color_render(
    rgba($card0, $cardTransparent),
    rgba($card1, $cardTransparent),
    rgb(255, 255, 255)
  );
}
.box1 {
  @include color_render(
    rgba($card1, $cardTransparent),
    rgba($card2, $cardTransparent),
    rgb(255, 255, 255)
  );
}
.box2 {
  @include color_render(
    rgba($card2, $cardTransparent),
    rgba($card3, $cardTransparent),
    rgb(255, 255, 255)
  );
}
.box3 {
  @include color_render(
    rgba($card3, $cardTransparent),
    rgba($card4, $cardTransparent),
    rgb(255, 255, 255)
  );
}
.box4 {
  @include color_render(
    rgba($card4, $cardTransparent),
    rgba($card5, $cardTransparent),
    rgb(255, 255, 255)
  );
}
.box5 {
  @include color_render(
    rgba($card5, $cardTransparent),
    rgba($card6, $cardTransparent),
    rgb(255, 255, 255)
  );
}
.box6 {
  @include color_render(
    rgba($card6, $cardTransparent),
    rgba($card7, $cardTransparent),
    rgb(255, 255, 255)
  );
}
